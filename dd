#!/bin/bash

# Content-Type header for CGI
echo "Content-Type: text/html; charset=utf-8"
echo ""

# Function to fetch the weather data using Open Meteo API
get_weather() {
    local lat=$1
    local lon=$2
    # Using curl to get the current weather (temperature for the specific latitude and longitude)
    weather_data=$(curl -s "https://api.open-meteo.com/v1/forecast?latitude=${lat}&longitude=${lon}&hourly=temperature_2m")
    echo "$weather_data"
}

# Function to start the game
start_game() {
    # Read city data from cityfiles.txt
    if [ ! -f "cityfiles.txt" ]; then
        echo "<html><body><h2>Error: cityfiles.txt not found! Make sure the file exists.</h2></body></html>"
        exit 1
    fi

    # Select a random line (city) from the cityfiles.txt
    city_data=$(shuf -n 1 cityfiles.txt)
    
    # Extract the city name, latitude, and longitude (ignoring altitude)
    city_name=$(echo "$city_data" | cut -d ' ' -f 1-2)
    lat=$(echo "$city_data" | grep -oP 'Latitude: \K[^\s,]*')
    lon=$(echo "$city_data" | grep -oP 'Longitude: \K[^\s,]*')

    # Fetch weather data for the selected city
    weather_data=$(get_weather "$lat" "$lon")
    
    # Parse the temperature from the JSON response using jq (we fetch the first hourly temperature)
    temp=$(echo "$weather_data" | jq '.hourly.temperature_2m[0]')

    # Tolerance level for the temperature guess
    tolerance=0.5

    # If form data is available (POST), process it
    if [ "$REQUEST_METHOD" == "POST" ]; then
        # Get form values (guesses from the player)
        read -r input
        temp_guess=$(echo "$input" | grep -oP 'temp_guess=\K[^&]*' | sed 's/%20/ /g')

        # Convert guess to a number
        temp_guess=$(echo "$temp_guess" | sed 's/[^0-9.-]//g')

        # Show the results of the guess
        echo "<html><body>"
        echo "<h1>Weather Guessing Game Result</h1>"
        echo "<p>You guessed the temperature to be: <strong>$temp_guess</strong>°C</p>"
        echo "<p>Actual temperature: <strong>$temp°C</strong></p>"

        # Calculate the absolute difference between guessed and actual temperature
        difference=$(echo "$temp_guess - $temp" | bc -l)
        abs_difference=$(echo "$difference" | awk '{if ($1<0) print -$1; else print $1}')

        # Game outcome based on proximity of guess
        if (( $(echo "$abs_difference <= $tolerance" | bc -l) )); then
            echo "<p>Great job! You guessed within the acceptable range!</p>"
        else
            echo "<p>Not quite right on the temperature. Try again!</p>"
        fi

        # Save the guess, city, and result to guess_temperature.txt
        echo "$city_name: Guessed: $temp_guess, Actual: $temp" >> guess_temperature.txt

        # Link to play again
        echo "<br><a href=''>Play Again</a>"
        echo "</body></html>"
    else
        # Show the initial form to input guesses
        echo "<html><body>"
        echo "<h1>Welcome to the Weather Guess Game!</h1>"
        echo "<p>This round is for the city of: <strong>$city_name</strong></p>"
        echo "<p>Guess the current temperature (in Celsius) for <strong>$city_name</strong>.</p>"

        # Form for user to input guesses
        echo "<form method='POST' action=''>"
        echo "<label for='temp_guess'>Guess the temperature (in Celsius):</label><br>"
        echo "<input type='number' name='temp_guess' id='temp_guess' required><br><br>"
        echo "<input type='submit' value='Submit Guess'>"
        echo "</form>"
        echo "</body></html>"
    fi
}

# Start the game
start_game

